name: Release Pipeline

on:
  push:
    branches:
      - main
      - feature/* # add condition 
      - fix/*

env:
    VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  run-unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    env:
        CI: true
    steps:
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Setup and cache node modules
          uses: actions/setup-node@v3
          with:
            node-version: 16
            cache: 'npm'
            cache-dependency-path: package-lock.json
            registry-url: 'https://npm.pkg.github.com'
            #scope: '@serenaandlily'
        
        - name: npm install project dependencies
          run: npm install
        
        - name: Install Vercel CLI
          run: npm install vercel
            
        - name: Run unit tests
          run: npm test 
  
  # test auto-rebase against main. fail build if rebase conflict occurs

  deploy-develop:
    name: Deploy Develop
    runs-on: ubuntu-latest
    needs: run-unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'
          #scope: '@serenaandlily'
        
      - name: Deploy to Develop
        run: echo "Deploying to the Develop environment."
      
      - name: Pull Vercell environment variables
        run: npx vercel pull --yes --environment=preview --git-branch=develop --token $VERCEL_TOKEN
      
      #- name: Run Vercel build
      #  run: npx vercel build --token $VERCEL_TOKEN
      
      - name: Deploy to Vercel
        run: npx vercel deploy --token $VERCEL_TOKEN
  
      - name: Alias Vercel develop domain
        run: npx vercel alias set cicd-test-deploy-develop.vercel.app --token $VERCEL_TOKEN

  deploy-staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs: deploy-develop
    if: github.ref == 'refs/heads/main' # Only run on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'
          #scope: '@serenaandlily'
        
      - name: Deploy to Staging
        run: echo "Deploying to the Staging environment."
      
      - name: Pull Vercell environment variables
        run: npx vercel pull --yes --environment=preview --git-branch=staging --token $VERCEL_TOKEN
      
      - name: Run Vercel build
        run: npx vercel build --token $VERCEL_TOKEN
      
      - name: Deploy to Vercel
        run: npx vercel deploy --prebuilt --token $VERCEL_TOKEN
      
      - name: Alias Vercel Staging domain
        run: npx vercel alias set cicd-test-deploy-staging.vercel.app --token $VERCEL_TOKEN  

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' # Only run on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: package-lock.json
          registry-url: 'https://npm.pkg.github.com'
          #scope: '@serenaandlily'
        
      - name: Deploy to Production
        run: echo "Deploying to the Production environment."
      
      - name: Pull Vercell environment variables
        run: npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
      
      - name: Run Vercel build
        run: npx vercel build --prod --token $VERCEL_TOKEN
      
      - name: Deploy to Vercel
        run: npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
      